// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Network extends pulumi.CustomResource {
    /**
     * Get an existing Network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkState, opts?: pulumi.CustomResourceOptions): Network {
        return new Network(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'infoblox:ipv4/network:Network';

    /**
     * Returns true if the given object is an instance of Network.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Network {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Network.__pulumiType;
    }

    /**
     * Set the parameter's value > 0 to allocate next available network with corresponding prefix length from the network
     * container defined by 'parent_cidr'
     */
    public readonly allocatePrefixLen!: pulumi.Output<number | undefined>;
    /**
     * The network block in cidr format.
     */
    public readonly cidr!: pulumi.Output<string>;
    /**
     * A string describing the network
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * The Extensible attributes of the Network, as a map in JSON format
     */
    public readonly extAttrs!: pulumi.Output<string | undefined>;
    /**
     * Gateway's IP address of the network. By default, the first IP address is set as gateway address; if the value is 'none'
     * then the network has no gateway.
     */
    public readonly gateway!: pulumi.Output<string>;
    /**
     * Network view name available in NIOS Server.
     */
    public readonly networkView!: pulumi.Output<string | undefined>;
    /**
     * The parent network container block in cidr format to allocate from.
     */
    public readonly parentCidr!: pulumi.Output<string | undefined>;
    /**
     * The number of IP's you want to reserve in IPv4 Network.
     */
    public readonly reserveIp!: pulumi.Output<number>;
    /**
     * The number of IP's you want to reserve in IPv6 Network
     */
    public readonly reserveIpv6!: pulumi.Output<number>;

    /**
     * Create a Network resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkArgs | NetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkState | undefined;
            resourceInputs["allocatePrefixLen"] = state ? state.allocatePrefixLen : undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["extAttrs"] = state ? state.extAttrs : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["networkView"] = state ? state.networkView : undefined;
            resourceInputs["parentCidr"] = state ? state.parentCidr : undefined;
            resourceInputs["reserveIp"] = state ? state.reserveIp : undefined;
            resourceInputs["reserveIpv6"] = state ? state.reserveIpv6 : undefined;
        } else {
            const args = argsOrState as NetworkArgs | undefined;
            resourceInputs["allocatePrefixLen"] = args ? args.allocatePrefixLen : undefined;
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["extAttrs"] = args ? args.extAttrs : undefined;
            resourceInputs["gateway"] = args ? args.gateway : undefined;
            resourceInputs["networkView"] = args ? args.networkView : undefined;
            resourceInputs["parentCidr"] = args ? args.parentCidr : undefined;
            resourceInputs["reserveIp"] = args ? args.reserveIp : undefined;
            resourceInputs["reserveIpv6"] = args ? args.reserveIpv6 : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Network.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Network resources.
 */
export interface NetworkState {
    /**
     * Set the parameter's value > 0 to allocate next available network with corresponding prefix length from the network
     * container defined by 'parent_cidr'
     */
    allocatePrefixLen?: pulumi.Input<number>;
    /**
     * The network block in cidr format.
     */
    cidr?: pulumi.Input<string>;
    /**
     * A string describing the network
     */
    comment?: pulumi.Input<string>;
    /**
     * The Extensible attributes of the Network, as a map in JSON format
     */
    extAttrs?: pulumi.Input<string>;
    /**
     * Gateway's IP address of the network. By default, the first IP address is set as gateway address; if the value is 'none'
     * then the network has no gateway.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Network view name available in NIOS Server.
     */
    networkView?: pulumi.Input<string>;
    /**
     * The parent network container block in cidr format to allocate from.
     */
    parentCidr?: pulumi.Input<string>;
    /**
     * The number of IP's you want to reserve in IPv4 Network.
     */
    reserveIp?: pulumi.Input<number>;
    /**
     * The number of IP's you want to reserve in IPv6 Network
     */
    reserveIpv6?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Network resource.
 */
export interface NetworkArgs {
    /**
     * Set the parameter's value > 0 to allocate next available network with corresponding prefix length from the network
     * container defined by 'parent_cidr'
     */
    allocatePrefixLen?: pulumi.Input<number>;
    /**
     * The network block in cidr format.
     */
    cidr?: pulumi.Input<string>;
    /**
     * A string describing the network
     */
    comment?: pulumi.Input<string>;
    /**
     * The Extensible attributes of the Network, as a map in JSON format
     */
    extAttrs?: pulumi.Input<string>;
    /**
     * Gateway's IP address of the network. By default, the first IP address is set as gateway address; if the value is 'none'
     * then the network has no gateway.
     */
    gateway?: pulumi.Input<string>;
    /**
     * Network view name available in NIOS Server.
     */
    networkView?: pulumi.Input<string>;
    /**
     * The parent network container block in cidr format to allocate from.
     */
    parentCidr?: pulumi.Input<string>;
    /**
     * The number of IP's you want to reserve in IPv4 Network.
     */
    reserveIp?: pulumi.Input<number>;
    /**
     * The number of IP's you want to reserve in IPv6 Network
     */
    reserveIpv6?: pulumi.Input<number>;
}
